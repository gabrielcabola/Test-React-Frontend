{"version":3,"sources":["services/network/Network.service.js","store/articles/Articles.actions.js","services/logger/Logger.service.js","store/articles/Articles.reducers.js","components/loader/Loader.js","utils/constants/ImageEndpoints.js","utils/helpers/Image.helper.js","components/layout/pages/thumbImage/index.js","components/layout/pages/itemList/index.js","components/layout/pages/list/index.js","views/articles/ArticlesPage.js","views/articles/ArticlesPageContainer.js","components/layout/pages/fullImage/index.js","views/articles/ArticlesShowPage.js","components/layout/header/index.js","App.js","reportWebVitals.js","index.js"],"names":["request","method","endpoint","payload","a","api","axios","create","baseURL","process","timeout","apiGet","apiPost","apiDelete","Api","get","then","response","data","catch","error","setApiError","post","delete","err","url","console","event","api_url","message","ActionTypes","log","ArticleInitialState","articles","articleViewActive","loading","completed","gridSize","ArticleReducer","state","action","type","Error","Loader","className","ImageEndpoints","ThumbImageHelper","fileName","ThumbImage","props","model","src","alt","withRouter","index","item","mainImage","to","manufacturer","List","map","article","i","ArticlesPage","ArticlesContext","createContext","ArticlesPageContainer","React","useReducer","dispatch","useEffect","status","ArticlesModule","Provider","value","FullImage","filename","ArticleShowPage","useParams","id","file","Header","children","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd327cba.chunk.js","sourcesContent":["import axios from 'axios';\n\n// @TODO Add in a ENV file\nconst baseUrl = process.env.REACT_APP_BACKEND_API_URL;\n\nexport const request = async (method, endpoint, payload) => {\n  const api = axios.create({\n    baseURL: baseUrl,\n    timeout: 300,\n  });\n  switch (method) {\n    case 'GET':\n      return await apiGet(api, endpoint);\n    case 'POST':\n      return await apiPost(api, endpoint);\n    case 'DELETE':\n      return await apiDelete(api, endpoint);\n    default:\n      return await apiGet(api, endpoint);\n  };\n}\n  \n/**\n * General get API function\n * @param {string} endpoint\n */\n export const apiGet = async (Api, endpoint) => {\n  \n    return await Api.get(endpoint)\n        .then(async (response) => {\n            const { data } = response;\n            return data;\n        }).catch(async (error) => {\n            const { response } = error;\n            setApiError(response, endpoint)\n        });\n}\n\n/**\n * General post API function\n * @param {string} endpoint\n */\nexport const apiPost = async (Api,endpoint, payload) => {     \n    return await Api.post(endpoint, payload)\n        .then(async (response) => {\n            const { data } = response;\n            return data;\n        }).catch(async (error) => { \n            const { response } = error;            \n            setApiError(response, endpoint)\n            return response;\n        });\n}\n\nexport const apiDelete = async (Api, endpoint, payload) => {     \n    return await Api.delete(endpoint, { data: payload })\n        .then(async (response) => {\n            const { data } = response;\n            return data;\n        }).catch(async (error) => { \n            const { response } = error;            \n            setApiError(response, endpoint)\n            return response;\n        });\n}\n\n// ERROR / TRACKING HANDLING -----------------\nexport const setApiError = (err, url) => {\n    console.error({\n        event: \"Checkout Network Error\",\n        api_url: url,\n        message: err\n    });\n};\n","export const ActionTypes = {\n  INIT: \"INIT\",\n  FETCH_ARTICLES: \"FETCH_ARTICLES\",\n  COMPLETE: \"COMPLETE\",\n  ACTIVE_ARTICLE:  \"ACTIVE_ARTICLE\",\n}\n\n","const debug = process.env.REACT_APP_APP_DEBUG;\n\nexport const log = (event,message) => {\n  if (debug) {\n    console.log({ event, message } );\n   }\n}\n","import { log } from 'services/logger/Logger.service';\nimport { ActionTypes } from 'store/articles/Articles.actions';\n\nexport const ArticleInitialState = {\n  articles: [],\n  articleViewActive: null,\n  loading: false,\n  completed: false,\n  gridSize: 10,\n};\n\nexport const ArticleReducer = (state, action) => {\n  log('ArticleReducer Dispatch', {type: action.type, payload: action.payload });\n  switch (action.type) {\n      case ActionTypes.INIT:\n          return {\n              ...state,\n              loading: true\n          };\n      case  ActionTypes.COMPLETE:\n            return {\n                ...state,\n              articles: action.payload,\n              loading: true,\n              completed: true,\n            };\n      case  ActionTypes.ACTIVE_ARTICLE:\n          return {\n              ...state,\n              articleViewActive: action.payload\n          };\n      default:\n          throw new Error();\n  }\n};","import React, { Fragment } from \"react\";\nimport './Loader.css';\n\nexport default function Loader() {\n return (\n  <Fragment>\n    <div className=\"loadingio-spinner-rolling-8tt3fggefq8\">\n     <div className=\"ldio-xpemuty8dbl\">\n      <div></div>\n     </div>\n    </div>\n  </Fragment>\n );\n}","export const ImageEndpoints = {\n  THUMB: 'https://thumbs.static-thomann.de/thumb/thumb120x/pics/prod/',\n  FULL: 'https://thumbs.static-thomann.de/thumb/thumb1000x/pics/prod/',\n}\n","import { ImageEndpoints } from 'utils/constants/ImageEndpoints';\n\nexport const ThumbImageHelper = (fileName) => {\n  return `${ImageEndpoints.THUMB}/${fileName}`;\n}\n\nexport const FullImageHelper = (fileName) => {\n  return `${ImageEndpoints.FULL}/${fileName}`;\n  \n}","import React, { Fragment } from \"react\";\nimport { ThumbImageHelper } from 'utils/helpers/Image.helper'\n\nexport default function ThumbImage(props) {\n  const { fileName, model } = props;\n  return (\n    <Fragment>\n      <div className=\"thumbImage\">\n        <img src={ThumbImageHelper(fileName)} alt={ model } />\n      </div>\n    </Fragment>\n  );\n}","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport ThumbImage from 'components/layout/pages/thumbImage';\nimport { Link } from \"react-router-dom\";\n\nfunction ItemList(props) {\n  const { index, item } = props;\n  const { mainImage } = item;\n  return (\n    <article>\n      <Link\n          key={index}\n          className={`articleLink`}\n          to={`/article/${index}/${mainImage.fileName}`}\n        >\n        <ThumbImage {...mainImage} />\n        <h2>{item.model}</h2>\n        <h3>{item.manufacturer}</h3>\n      </Link>\n    </article>\n  );\n}\n\nexport default withRouter(ItemList);","import React from \"react\";\nimport ItemList from 'components/layout/pages/itemList';\n\nfunction List(props) {\n  const { articles } = props;\n  return (\n    <section className=\"List\">\n      {articles.map((article, i) => {\n        return (\n          <ItemList key={i} index={i} item={article}>\n          </ItemList>\n        );\n       })}\n    </section>\n  );\n}\n\nexport default List;","import React from \"react\";\nimport List from 'components/layout/pages/list';\n\nexport default function ArticlesPage(props) {\n  return (\n    <div className=\"ArticlesPage\">\n      <List {...props}>\n      </List>\n    </div>\n  );\n}","import React, { createContext, useEffect } from \"react\";\nimport { request } from 'services/network/Network.service';\nimport { ActionTypes } from 'store/articles/Articles.actions';\nimport { ArticleReducer, ArticleInitialState } from 'store/articles/Articles.reducers';\nimport Loader from \"components/loader/Loader\";\nimport ArticlesPage from \"views/articles/ArticlesPage\";\nimport { log } from 'services/logger/Logger.service';\n\n// Create Context Object\nexport const ArticlesContext = createContext();\n// API  fetch\nexport const fetchArticles = () => request('GET', '/articles');\n\n// Create a provider for components to consume and subscribe to changes\nexport default function ArticlesPageContainer(props) {\n    \n   const [state, dispatch] = React.useReducer(ArticleReducer, ArticleInitialState);\n\n    // Fetch the Information from Backend\n    useEffect(() => {\n        const { loading } = state;\n        if (loading === false) {\n          dispatch({ type: ActionTypes.INIT });\n          fetchArticles().then(({ status, articles }) => {\n                  dispatch({\n                    type: ActionTypes.COMPLETE,\n                    payload: articles\n                  });\n                }).catch((error) => log('fetchArticlesError',error)\n                );\n        }\n    }, [state]);\n\n    const ArticlesModule = (\n        <ArticlesContext.Provider value={[state, dispatch]}>\n          <ArticlesPage {...state} />\n        </ArticlesContext.Provider>\n    );\n    \n    return (state.completed === true) ? ArticlesModule : <Loader />;\n};\n\n","import React, { Fragment } from \"react\";\nimport { FullImageHelper } from 'utils/helpers/Image.helper'\n\nexport default function FullImage(props) {\n  const { filename } = props;\n  return (\n    <Fragment>\n      <div className=\"fullImage\">\n        <img src={FullImageHelper(filename)} alt={ filename } />\n      </div>\n    </Fragment>\n  );\n}","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport FullImage from 'components/layout/pages/fullImage';\n\nexport default function ArticleShowPage(props) {\n  let { id, file } = useParams();\n  console.log({id, file });\n  return (\n    <div className=\"ArticlesPage\">\n       <Link\n          className={`backButton`}\n          to={`/articles`}\n        >Back</Link>\n      <FullImage filename={file} />\n    </div>\n  );\n}","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <section className=\"Header\">\n      <h1>Articles App</h1>\n      {props.children}\n    </section>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ArticlesPageContainer from 'views/articles/ArticlesPageContainer';\nimport ArticleShowPage from 'views/articles/ArticlesShowPage';\nimport Header from 'components/layout/header';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n      <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ArticlesPageContainer} />\n        <Route path=\"/articles\" component={ArticlesPageContainer} />\n          <Route path=\"/article/:id/:file\" component={ArticleShowPage} />\n         </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}